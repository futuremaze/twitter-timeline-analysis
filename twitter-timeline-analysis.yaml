AWSTemplateFormatVersion: 2010-09-09
Description: Building an Environment for Analyzing Twitter Timeline with  Amazon Comprehend.

Parameters:
  ConsumerApiKey:
    Description: Twitter App API key.
    Type: String
    NoEcho: True

  ConsumerApiSecret:
    Description: Twitter App Secret key.
    Type: String
    NoEcho: True

  AccessToken:
    Description: Twitter App Access token.
    Type: String
    NoEcho: True

  AccessTokenSecret:
    Description: Twitter App Access token secret.
    Type: String
    NoEcho: True

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Twitter App
        Parameters:
          - ConsumerApiKey
          - ConsumerApiSecret
          - AccessToken
          - AccessTokenSecret

Resources:
  DataStoreS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      Tags:
        - Key: Project
          Value: twitter-timeline-analysis

  TwitterDashboardFirehoseRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: TwitterDashboard-Firehose
      Description: Role to upload data of Twitter Timeline from Kinesis Firehose to S3 bucket.
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - firehose.amazonaws.com
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - !Ref TwitterDashboardFirehosePolicy
      Tags:
        - Key: Project
          Value: twitter-timeline-analysis

  TwitterDashboardFirehosePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: TwitterDashboard-Firehose-Policy
      Description: Allow to upload data of Twitter Timeline from Kinesis Firehose to S3 bucket.
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - "s3:AbortMultipartUpload"
              - "s3:GetBucketLocation"
              - "s3:GetObject"
              - "s3:ListBucket"
              - "s3:ListBucketMultipartUploads"
              - "s3:PutObject"
            Resource:
              - !Sub "${DataStoreS3Bucket.Arn}"
              - !Sub "${DataStoreS3Bucket.Arn}/*"
          - Effect: Allow
            Action:
              - "logs:CreateLogGroup"
              - "logs:CreateLogStream"
              - "logs:PutLogEvents"
              - "logs:DescribeLogStreams"
            Resource:
              - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/kinesisfirehose/*"

  TwitterDashboardRaw:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: Twitter-Dashboard-Raw
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub ${DataStoreS3Bucket.Arn}
        Prefix: raw/
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        RoleARN: !Sub ${TwitterDashboardFirehoseRole.Arn}

  TwitterDashboardSentiment:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: Twitter-Dashboard-Sentiment
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub ${DataStoreS3Bucket.Arn}
        Prefix: sentiment/
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        RoleARN: !Sub ${TwitterDashboardFirehoseRole.Arn}

  TwitterDashboardEntities:
    Type: AWS::KinesisFirehose::DeliveryStream
    Properties:
      DeliveryStreamName: Twitter-Dashboard-Entities
      DeliveryStreamType: DirectPut
      S3DestinationConfiguration:
        BucketARN: !Sub ${DataStoreS3Bucket.Arn}
        Prefix: entities/
        BufferingHints:
          IntervalInSeconds: 60
          SizeInMBs: 5
        RoleARN: !Sub ${TwitterDashboardFirehoseRole.Arn}

  TwitterAPISecrets:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: TwitterAPI-Secrets
      Description: Secrets of Twitter App.
      SecretString: !Sub |
        {
          "ConsumerApiKey": "${ConsumerApiKey}",
          "ConsumerApiSecret": "${ConsumerApiSecret}",
          "AccessToken": "${AccessToken}",
          "AccessTokenSecret": "${AccessTokenSecret}"
        }
      Tags:
        - Key: Project
          Value: twitter-timeline-analysis

Outputs:
  DataStoreS3Bucket:
    Description: S3 bucket to store data.
    Value: !Ref DataStoreS3Bucket

  TwitterDashboardFirehoseRole:
    Description: Role to upload data of Twitter Timeline from Kinesis Firehose to S3 bucket.
    Value: !Ref TwitterDashboardFirehoseRole

  TwitterDashboardFirehosePolicy:
    Description: Allow to upload data of Twitter Timeline from Kinesis Firehose to S3 bucket.
    Value: !Ref TwitterDashboardFirehosePolicy

  TwitterDashboardRaw:
    Description: firehose delivery stream for raw data.
    Value: !Ref TwitterDashboardRaw

  TwitterDashboardSentiment:
    Description: firehose delivery stream for sentiment data.
    Value: !Ref TwitterDashboardSentiment

  TwitterDashboardEntities:
    Description: firehose delivery stream for entity data.
    Value: !Ref TwitterDashboardEntities

  TwitterAPISecrets:
    Description: Secrets of Twitter App.
    Value: !Ref TwitterAPISecrets
